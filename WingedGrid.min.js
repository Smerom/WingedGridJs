function baseIcosahedron(){var e=new WingedGrid(0,0,0,0,0);e.faces_edges=Int32Array.from([9,4,0,1,5,0,2,6,1,3,7,2,4,8,3,14,19,10,15,11,10,16,12,11,17,13,12,18,14,13,29,28,9,29,20,17,21,20,5,21,22,18,23,22,6,23,24,19,25,24,7,25,26,15,27,26,8,27,28,16]),e.faces_edgeOffsets=new Int32Array(20);for(var s=0;s<20;++s)e.faces_edgeOffsets[s]=3*s;var t=1.61803398875;e.vertices_coords=Float32Array.from([0,1,t,0,1,-t,0,-1,t,0,-1,-t,-t,0,1,t,0,1,-t,0,-1,t,0,-1,-1,t,0,-1,-t,0,1,t,0,1,-t,0]),e.vertices_edges=Int32Array.from([4,3,2,1,0,19,24,25,15,10,5,20,29,9,0,11,12,13,14,10,6,22,21,5,1,9,28,27,8,4,18,22,23,19,14,15,26,27,16,11,7,24,23,6,2,17,20,21,18,13,8,26,25,7,3,16,28,29,17,12]),e.vertices_edgeOffsets=new Int32Array(12);for(var s=0;s<12;++s)e.vertices_edgeOffsets[s]=5*s;return e.edges_firstVertexA=Int32Array.from([0,0,0,0,0,4,8,10,5,2,1,7,11,9,6,1,7,11,9,6,2,4,4,8,8,10,10,5,5,2]),e.edges_firstVertexB=Int32Array.from([2,4,8,10,5,2,4,8,10,5,3,3,3,3,3,7,11,9,6,1,9,9,6,6,1,1,7,7,11,11]),e.edges_faceA=Int32Array.from([0,1,2,3,4,1,2,3,4,0,5,6,7,8,9,6,7,8,9,5,11,12,13,14,15,16,17,18,19,10]),e.edges_faceB=Int32Array.from([1,2,3,4,0,12,14,16,18,10,6,7,8,9,5,17,19,11,13,15,12,13,14,15,16,17,18,19,10,11]),e.edges_prevA=Int32Array.from([4,0,1,2,3,1,2,3,4,0,19,15,16,17,18,10,11,12,13,14,29,5,21,6,23,7,25,8,27,9]),e.edges_nextA=Int32Array.from([9,5,6,7,8,0,1,2,3,4,14,10,11,12,13,11,12,13,14,10,17,20,18,22,19,24,15,26,16,28]),e.edges_prevB=Int32Array.from([5,6,7,8,9,20,22,24,26,28,11,12,13,14,10,26,28,20,22,24,21,18,23,19,25,15,27,16,29,17]),e.edges_nextB=Int32Array.from([1,2,3,4,0,21,23,25,27,29,15,16,17,18,19,25,27,29,21,23,5,22,6,24,7,26,8,28,9,20]),[e,null]}function vectorAngle(e,s){return Math.acos((e[0]*s[0]+e[1]*s[1]+e[2]*s[2])/(Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2])*Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2])))}function vectorLength(e){return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2])}var WingedEdge=function(){function e(e,s){this.grid=e,this.index=s}return e.prototype.firstVertexA=function(){return this.grid.edges_firstVertexA[this.index]},e.prototype.firstVertexB=function(){return this.grid.edges_firstVertexB[this.index]},e.prototype.faceA=function(){return this.grid.edges_faceA[this.index]},e.prototype.faceB=function(){return this.grid.edges_faceB[this.index]},e.prototype.prevA=function(){return this.grid.edges_prevA[this.index]},e.prototype.nextA=function(){return this.grid.edges_nextA[this.index]},e.prototype.prevB=function(){return this.grid.edges_prevB[this.index]},e.prototype.nextB=function(){return this.grid.edges_nextB[this.index]},e.prototype.nextEdgeForFace=function(e){return this.faceA()==e?[this.nextA(),null]:this.faceB()==e?[this.nextB(),null]:[-1,Error("Edge not associated with face.")]},e.prototype.prevEdgeForFace=function(e){return this.faceA()==e?[this.prevA(),null]:this.faceB()==e?[this.prevB(),null]:[-1,Error("Edge not associated with face.")]},e.prototype.firstVertexForFace=function(e){return this.faceA()==e?[this.firstVertexA(),null]:this.faceB()==e?[this.firstVertexB(),null]:[-1,Error("Edge not associated with face.")]},e.prototype.secondVertexForFace=function(e){return this.faceA()==e?[this.firstVertexB(),null]:this.faceB()==e?[this.firstVertexA(),null]:[-1,Error("Edge not associated with face.")]},e.prototype.nextEdgeForVertex=function(e){return this.firstVertexA()==e?[this.prevA(),null]:this.firstVertexB()==e?[this.prevB(),null]:[-1,Error("Edge not associated with vertex.")]},e.prototype.prevEdgeForVertex=function(e){return this.firstVertexA()==e?this.nextEdgeForFace(this.faceB()):this.firstVertexB()==e?this.nextEdgeForFace(this.faceA()):[-1,Error("Edge not associated with vertex.")]},e.prototype.adjacentForFace=function(e){return this.faceA()==e?[this.faceB(),null]:this.faceB()==e?[this.faceA(),null]:[-1,Error("Edge not associated with face.")]},e.prototype.adjacentForVertex=function(e){return this.firstVertexA()==e?[this.firstVertexB(),null]:this.firstVertexB()==e?[this.firstVertexA(),null]:[-1,Error("Edge not associated with vertex.")]},e}(),WingedFace=function(){function e(e,s){this.grid=e,this.index=s}return e.prototype.edges=function(){var e;e=this.index==this.grid.faces_edgeOffsets.length-1?this.grid.faces_edges.length:this.grid.faces_edgeOffsets[this.index+1];for(var s=new Array(e-this.grid.faces_edgeOffsets[this.index]),t=0,r=this.grid.faces_edgeOffsets[this.index];r<e;++r)s[t]=new WingedEdge(this.grid,this.grid.faces_edges[r]),t++;return s},e}(),WingedVertex=function(){function e(e,s){this.grid=e,this.index=s}return e.prototype.coords=function(){return[this.grid.vertices_coords[3*this.index],this.grid.vertices_coords[3*this.index+1],this.grid.vertices_coords[3*this.index+2]]},e.prototype.edges=function(){var e;e=this.index==this.grid.vertices_edgeOffsets.length-1?this.grid.vertices_edges.length:this.grid.vertices_edgeOffsets[this.index+1];for(var s=new Array(e-this.grid.vertices_edgeOffsets[this.index]),t=0,r=this.grid.vertices_edgeOffsets[this.index];r<e;++r)s[t]=new WingedEdge(this.grid,this.grid.vertices_edges[r]),t++;return s},e.prototype.vertexNeighbors=function(){for(var s=this.grid.neighborsForVertex(this.index),t=new Array(s.length),r=s.length-1;r>=0;r--)t[r]=new e(this.grid,s[r]);return t},e}(),WingedGrid=function(){function e(e,s,t,r,d){this.faces_edgeOffsets=new Int32Array(e),this.faces_edges=new Int32Array(r),this.edges_firstVertexA=new Int32Array(s),this.edges_firstVertexA=new Int32Array(s),this.edges_firstVertexB=new Int32Array(s),this.edges_faceA=new Int32Array(s),this.edges_faceB=new Int32Array(s),this.edges_prevA=new Int32Array(s),this.edges_nextA=new Int32Array(s),this.edges_prevB=new Int32Array(s),this.edges_nextB=new Int32Array(s),this.vertices_coords=new Float32Array(3*t),this.vertices_edges=new Int32Array(d),this.vertices_edgeOffsets=new Int32Array(t)}return e.prototype.faces=function(e){return new WingedFace(this,e)},e.prototype.edges=function(e){return new WingedEdge(this,e)},e.prototype.vertices=function(e){return new WingedVertex(this,e)},e.prototype.neighborsForFace=function(e){for(var s=Array(),t=this.faces(e).edges().length-1;t>=0;t--){var r=this.faces(e).edges()[t].adjacentForFace(e),d=r[0];r[1];s[t]=d}return s},e.prototype.neighborsForVertex=function(e){for(var s=Array(),t=this.vertices(e).edges().length-1;t>=0;t--){var r=this.vertices(e).edges()[t].adjacentForVertex(e),d=r[0];r[1];s[t]=d}return s},e.prototype.normalizeVerticesToDistanceFromOrigin=function(e){for(var s=this.vertices_edgeOffsets.length-1;s>=0;s--){var t=this.vertices(s),r=vectorLength(t.coords());this.vertices_coords[3*s+0]=this.vertices_coords[3*s+0]*e/r,this.vertices_coords[3*s+1]=this.vertices_coords[3*s+1]*e/r,this.vertices_coords[3*s+2]=this.vertices_coords[3*s+2]*e/r}},e.prototype.createDual=function(){var s=new e(this.vertices_edgeOffsets.length,this.edges_firstVertexA.length,this.faces_edgeOffsets.length,0,0);s.faces_edges=this.vertices_edges,s.faces_edgeOffsets=this.vertices_edgeOffsets,s.vertices_edges=this.faces_edges,s.vertices_edgeOffsets=this.faces_edgeOffsets;for(var t=this.faces_edgeOffsets.length-1;t>=0;t--){for(var r=this.faces(t).edges(),d=[0,0,0],i=0,g=r.length-1;g>=0;g--){var n=r[g],f=n.firstVertexForFace(t),c=f[0],o=f[1];if(null!=o)return[s,o];d[0]+=this.vertices_coords[3*c+0],d[1]+=this.vertices_coords[3*c+1],d[2]+=this.vertices_coords[3*c+2],i+=1}s.vertices_coords[3*t+0]=d[0]/i,s.vertices_coords[3*t+1]=d[1]/i,s.vertices_coords[3*t+2]=d[2]/i}s.edges_faceA=this.edges_firstVertexA,s.edges_faceB=this.edges_firstVertexB,s.edges_firstVertexA=this.edges_faceB,s.edges_firstVertexB=this.edges_faceA;for(var a=s.faces.length-1;a>=0;a--)for(var r=s.faces(a).edges(),_=r.length-1;_>=0;_--){var x=r[_].index;s.edges_faceA[x]==a&&(0==_?(s.edges_prevA[x]=r[r.length-1].index,s.edges_nextA[x]=r[1].index):_==r.length-1?(s.edges_prevA[x]=r[r.length-1].index,s.edges_nextA[x]=r[0].index):(s.edges_prevA[x]=r[_-1].index,s.edges_nextA[x]=r[_+1].index)),s.edges_faceB[x]==a&&(0==_?(s.edges_prevB[x]=r[r.length-1].index,s.edges_nextB[x]=r[1].index):_==r.length-1?(s.edges_prevB[x]=r[r.length-1].index,s.edges_nextB[x]=r[0].index):(s.edges_prevB[x]=r[_-1].index,s.edges_nextB[x]=r[_+1].index))}return[s,null]},e.prototype.vertexIndexAtClockwiseIndexOnOldFace=function(e,s,t,r){var d=this.faces(e).edges()[s],i=d.index;return this.edges_faceA[i]==e?this.vertices_edgeOffsets.length+i*r+t:this.edges_faceB[i]==e?this.vertices_edgeOffsets.length+i*r+r-1-t:-1},e.prototype.edgeIndexAtClockwiseIndexOnOldFace=function(e,s,t,r){var d=this.faces(e).edges()[s],i=d.index;return this.edges_faceA[i]==e?i*(r+1)+t:this.edges_faceB[i]==e?i*(r+1)+r-t:-1},e.prototype.subdivideTriangles=function(s){if(s<1)return[null,Error("Invalid number of subdivisions.")];for(var t=this.faces_edgeOffsets.length*((s+2)*(s+1)/2+(s+1)*s/2),r=new e(t,3*t/2,t/2+2,3*t,6*(t/2+2-this.vertices_edgeOffsets.length)+this.vertices_edges.length),d=r.faces_edges.length-1;d>=0;d--)r.faces_edges[d]=-1;for(var d=r.faces_edgeOffsets.length-1;d>=0;d--)r.faces_edgeOffsets[d]=-1;for(var d=r.edges_firstVertexA.length-1;d>=0;d--)r.edges_faceA[d]=-1,r.edges_faceB[d]=-1,r.edges_firstVertexA[d]=-1,r.edges_firstVertexB[d]=-1,r.edges_nextA[d]=-1,r.edges_nextB[d]=-1,r.edges_prevA[d]=-1,r.edges_prevB[d]=-1;for(var d=r.vertices_edges.length-1;d>=0;d--)r.vertices_edges[d]=-1;for(var i=0,d=0;d<r.vertices_edgeOffsets.length;d++)d<this.vertices_edgeOffsets.length?i=this.vertices_edgeOffsets[d]:d==this.vertices_edgeOffsets.length?i=this.vertices_edges.length:i+=6,r.vertices_edgeOffsets[d]=i;for(var d=r.vertices_coords.length-1;d>=0;d--)r.vertices_coords[d]=1/0;for(var g=this.vertices_edgeOffsets.length,n=this.edges_faceA.length,f=n-1;f>=0;f--){r.edges_firstVertexA[f*(s+1)]=this.edges_firstVertexA[f],r.edges_firstVertexB[f*(s+1)]=g+f*s;for(var c=1;c<s;c++)r.edges_firstVertexA[f*(s+1)+c]=g+f*s+c-1,r.edges_firstVertexB[f*(s+1)+c]=g+f*s+c;r.edges_firstVertexA[f*(s+1)+s]=g+f*s+s-1,r.edges_firstVertexB[f*(s+1)+s]=this.edges_firstVertexB[f]}for(var o=this.faces_edgeOffsets.length-1;o>=0;o--){var a=this.faces(o),_=g+n*s+s*(s-1)/2*o,x=(s+1)*n+3*s*(s+1)/2*o;if(1==s)r.edges_firstVertexA[x+0]=g+a.edges()[0].index,r.edges_firstVertexB[x+0]=g+a.edges()[1].index,r.edges_firstVertexA[x+1]=g+a.edges()[0].index,r.edges_firstVertexB[x+1]=g+a.edges()[2].index,r.edges_firstVertexA[x+2]=g+a.edges()[1].index,r.edges_firstVertexB[x+2]=g+a.edges()[2].index;else{r.edges_firstVertexA[x+0]=this.vertexIndexAtClockwiseIndexOnOldFace(o,0,s-1,s),r.edges_firstVertexB[x+0]=this.vertexIndexAtClockwiseIndexOnOldFace(o,1,0,s),r.edges_firstVertexA[x+1]=this.vertexIndexAtClockwiseIndexOnOldFace(o,0,s-1,s),r.edges_firstVertexB[x+1]=_+0,r.edges_firstVertexA[x+2]=this.vertexIndexAtClockwiseIndexOnOldFace(o,1,0,s),r.edges_firstVertexB[x+2]=_+0;var h,d=0;for(d=1;d<s-1;d++){h=d*(d+1)*3/2,r.edges_firstVertexA[x+h+0]=this.vertexIndexAtClockwiseIndexOnOldFace(o,0,s-1-d,s),r.edges_firstVertexB[x+h+0]=_+d*(d-1)/2,r.edges_firstVertexA[x+h+1]=this.vertexIndexAtClockwiseIndexOnOldFace(o,0,s-1-d,s),r.edges_firstVertexB[x+h+1]=_+d*(d-1)/2+d,r.edges_firstVertexA[x+h+2]=_+d*(d-1)/2,r.edges_firstVertexB[x+h+2]=_+d*(d-1)/2+d;for(var c=1;c<d;c++)r.edges_firstVertexA[x+h+3*c+0]=_+d*(d-1)/2+c-1,r.edges_firstVertexB[x+h+3*c+0]=_+d*(d-1)/2+c,r.edges_firstVertexA[x+h+3*c+1]=_+d*(d-1)/2+c-1,r.edges_firstVertexB[x+h+3*c+1]=_+d*(d-1)/2+d+c,r.edges_firstVertexA[x+h+3*c+2]=_+d*(d-1)/2+c,r.edges_firstVertexB[x+h+3*c+2]=_+d*(d-1)/2+d+c;r.edges_firstVertexA[x+h+3*d+0]=_+d*(d-1)/2+d-1,r.edges_firstVertexB[x+h+3*d+0]=this.vertexIndexAtClockwiseIndexOnOldFace(o,1,d,s),r.edges_firstVertexA[x+h+3*d+1]=_+d*(d-1)/2+d-1,r.edges_firstVertexB[x+h+3*d+1]=_+d*(d-1)/2+2*d,r.edges_firstVertexA[x+h+3*d+2]=this.vertexIndexAtClockwiseIndexOnOldFace(o,1,d,s),r.edges_firstVertexB[x+h+3*d+2]=_+d*(d-1)/2+2*d}d=s-1,h=d*(d+1)*3/2,r.edges_firstVertexA[x+h+0]=this.vertexIndexAtClockwiseIndexOnOldFace(o,0,0,s),r.edges_firstVertexB[x+h+0]=_+d*(d-1)/2,r.edges_firstVertexA[x+h+1]=this.vertexIndexAtClockwiseIndexOnOldFace(o,0,0,s),r.edges_firstVertexB[x+h+1]=this.vertexIndexAtClockwiseIndexOnOldFace(o,2,s-1,s),r.edges_firstVertexA[x+h+2]=_+d*(d-1)/2,r.edges_firstVertexB[x+h+2]=this.vertexIndexAtClockwiseIndexOnOldFace(o,2,s-1,s);for(var c=1;c<d;c++)r.edges_firstVertexA[x+h+3*c+0]=_+d*(d-1)/2+c-1,r.edges_firstVertexB[x+h+3*c+0]=_+d*(d-1)/2+c,r.edges_firstVertexA[x+h+3*c+1]=_+d*(d-1)/2+c-1,r.edges_firstVertexB[x+h+3*c+1]=this.vertexIndexAtClockwiseIndexOnOldFace(o,2,s-c-1,s),r.edges_firstVertexA[x+h+3*c+2]=_+d*(d-1)/2+c,r.edges_firstVertexB[x+h+3*c+2]=this.vertexIndexAtClockwiseIndexOnOldFace(o,2,s-c-1,s);r.edges_firstVertexA[x+h+3*d+0]=_+d*(d-1)/2+d-1,r.edges_firstVertexB[x+h+3*d+0]=this.vertexIndexAtClockwiseIndexOnOldFace(o,1,d,s),r.edges_firstVertexA[x+h+3*d+1]=_+d*(d-1)/2+d-1,r.edges_firstVertexB[x+h+3*d+1]=this.vertexIndexAtClockwiseIndexOnOldFace(o,2,0,s),r.edges_firstVertexA[x+h+3*d+2]=this.vertexIndexAtClockwiseIndexOnOldFace(o,1,d,s),r.edges_firstVertexB[x+h+3*d+2]=this.vertexIndexAtClockwiseIndexOnOldFace(o,2,0,s)}}for(var v=this.faces_edgeOffsets.length-1;v>=0;v--){var A=(s+2)*(s+1)/2+(s+1)*s/2,l=3*s*(s+1)/2,V=A*v,x=(s+1)*n+l*v;r.faces_edgeOffsets[V]=3*V,r.faces_edges[3*V+0]=this.edgeIndexAtClockwiseIndexOnOldFace(v,0,s,s),r.faces_edges[3*V+1]=this.edgeIndexAtClockwiseIndexOnOldFace(v,1,0,s),r.faces_edges[3*V+2]=x;for(var B=1;B<s;B++){var O=B*(B+1)/2+B*(B-1)/2;r.faces_edgeOffsets[V+O]=3*(V+O),r.faces_edges[3*(V+O)+0]=this.edgeIndexAtClockwiseIndexOnOldFace(v,0,s-B,s),r.faces_edges[3*(V+O)+1]=x+B*(B-1)*3/2+1,r.faces_edges[3*(V+O)+2]=x+B*(B+1)*3/2;for(var c=1;c<(B+1)*(B+2)/2+(B+1)*B/2-O-1;c++)c%2==1?(r.faces_edgeOffsets[V+O+c]=3*(V+O+c),r.faces_edges[3*(V+O+c)+0]=x+B*(B-1)*3/2+3*(c-1)/2,r.faces_edges[3*(V+O+c)+1]=x+B*(B-1)*3/2+3*(c-1)/2+2,r.faces_edges[3*(V+O+c)+2]=x+B*(B-1)*3/2+3*(c-1)/2+1):(r.faces_edgeOffsets[V+O+c]=3*(V+O+c),r.faces_edges[3*(V+O+c)+0]=x+B*(B+1)*3/2+3*c/2,r.faces_edges[3*(V+O+c)+1]=x+B*(B-1)*3/2+3*(c-2)/2+2,r.faces_edges[3*(V+O+c)+2]=x+B*(B-1)*3/2+3*c/2+1);r.faces_edgeOffsets[V+(B+1)*(B+2)/2+(B+1)*B/2-1]=3*(V+(B+1)*(B+2)/2+(B+1)*B/2-1),r.faces_edges[3*(V+(B+1)*(B+2)/2+(B+1)*B/2-1)+0]=x+B*(B+1)*3/2+3*((B+1)*(B+2)/2+(B+1)*B/2-O-1)/2,r.faces_edges[3*(V+(B+1)*(B+2)/2+(B+1)*B/2-1)+1]=x+B*(B-1)*3/2+3*((B+1)*(B+2)/2+(B+1)*B/2-O-3)/2+2,r.faces_edges[3*(V+(B+1)*(B+2)/2+(B+1)*B/2-1)+2]=this.edgeIndexAtClockwiseIndexOnOldFace(v,1,B,s)}var O=s*(s+1)/2+s*(s-1)/2;r.faces_edgeOffsets[V+O]=3*(V+O),r.faces_edges[3*(V+O)+0]=this.edgeIndexAtClockwiseIndexOnOldFace(v,0,0,s),r.faces_edges[3*(V+O)+1]=x+s*(s-1)*3/2+1,r.faces_edges[3*(V+O)+2]=this.edgeIndexAtClockwiseIndexOnOldFace(v,2,s,s);for(var c=1;c<A-O-1;c++)c%2==1?(r.faces_edgeOffsets[V+O+c]=3*(V+O+c),r.faces_edges[3*(V+O+c)+0]=x+s*(s-1)*3/2+3*(c-1)/2,r.faces_edges[3*(V+O+c)+1]=x+s*(s-1)*3/2+3*(c-1)/2+2,r.faces_edges[3*(V+O+c)+2]=x+s*(s-1)*3/2+3*(c-1)/2+1):(r.faces_edgeOffsets[V+O+c]=3*(V+O+c),r.faces_edges[3*(V+O+c)+0]=this.edgeIndexAtClockwiseIndexOnOldFace(v,2,s-c/2,s),r.faces_edges[3*(V+O+c)+1]=x+s*(s-1)*3/2+3*(c-2)/2+2,r.faces_edges[3*(V+O+c)+2]=x+s*(s-1)*3/2+3*c/2+1);r.faces_edgeOffsets[V+A-1]=3*(V+A-1),r.faces_edges[3*(V+A-1)+0]=this.edgeIndexAtClockwiseIndexOnOldFace(v,2,0,s),r.faces_edges[3*(V+A-1)+1]=x+s*(s-1)*3/2+3*(A-O-3)/2+2,r.faces_edges[3*(V+A-1)+2]=this.edgeIndexAtClockwiseIndexOnOldFace(v,1,s,s)}for(var u=r.faces_edgeOffsets.length-1;u>=0;u--){var p=r.faces(u).edges(),I=p.length,F=void 0,y=void 0,w=void 0;w=p[I-1].index,F=p[0].index,y=p[1].index,r.edges_firstVertexA[F]==r.edges_firstVertexA[w]||r.edges_firstVertexA[F]==r.edges_firstVertexB[w]?r.edges_firstVertexB[F]==r.edges_firstVertexA[y]||r.edges_firstVertexB[F]==r.edges_firstVertexB[y]?r.edges_faceA[F]==-1?(r.edges_faceA[F]=u,r.edges_prevA[F]=w,r.edges_nextA[F]=y):console.log("For face "+u+". Face A has already been set for edge: "+F+" With edge set: "+p):console.log("For face "+u+". Previous edge matches, but next edge doesn't share correct vertex!"):r.edges_firstVertexB[F]==r.edges_firstVertexA[w]||r.edges_firstVertexB[F]==r.edges_firstVertexB[w]?r.edges_firstVertexA[F]==r.edges_firstVertexA[y]||r.edges_firstVertexA[F]==r.edges_firstVertexB[y]?r.edges_faceB[F]==-1?(r.edges_faceB[F]=u,r.edges_prevB[F]=w,r.edges_nextB[F]=y):console.log("For face "+u+". Face B has already been set for edge: "+F+" With edge set: "+p):console.log("For face "+u+". Previous edge matches, but next edge doesn't share correct vertex!"):console.log("For face "+u+". Edges Don't share a vertex!");for(var k=1;k<I-1;k++)w=p[k-1].index,F=p[k].index,y=p[k+1].index,r.edges_firstVertexA[F]==r.edges_firstVertexA[w]||r.edges_firstVertexA[F]==r.edges_firstVertexB[w]?r.edges_firstVertexB[F]==r.edges_firstVertexA[y]||r.edges_firstVertexB[F]==r.edges_firstVertexB[y]?r.edges_faceA[F]==-1?(r.edges_faceA[F]=u,r.edges_prevA[F]=w,r.edges_nextA[F]=y):console.log("For face "+u+". Face A has already been set for edge: "+F+" With edge set: "+p):console.log("For face "+u+". Previous edge matches, but next edge doesn't share correct vertex!"):r.edges_firstVertexB[F]==r.edges_firstVertexA[w]||r.edges_firstVertexB[F]==r.edges_firstVertexB[w]?r.edges_firstVertexA[F]==r.edges_firstVertexA[y]||r.edges_firstVertexA[F]==r.edges_firstVertexB[y]?r.edges_faceB[F]==-1?(r.edges_faceB[F]=u,r.edges_prevB[F]=w,r.edges_nextB[F]=y):console.log("For face "+u+". Face B has already been set for edge: "+F+" With edge set: "+p):console.log("For face "+u+". Previous edge matches, but next edge doesn't share correct vertex!"):console.log("For face "+u+". Edges Don't share a vertex!");w=p[I-2].index,F=p[I-1].index,y=p[0].index,r.edges_firstVertexA[F]==r.edges_firstVertexA[w]||r.edges_firstVertexA[F]==r.edges_firstVertexB[w]?r.edges_firstVertexB[F]==r.edges_firstVertexA[y]||r.edges_firstVertexB[F]==r.edges_firstVertexB[y]?r.edges_faceA[F]==-1?(r.edges_faceA[F]=u,r.edges_prevA[F]=w,r.edges_nextA[F]=y):console.log("For face "+u+". Face A has already been set for edge: "+F+" With edge set: "+p):console.log("For face "+u+". Previous edge matches, but next edge doesn't share correct vertex!"):r.edges_firstVertexB[F]==r.edges_firstVertexA[w]||r.edges_firstVertexB[F]==r.edges_firstVertexB[w]?r.edges_firstVertexA[F]==r.edges_firstVertexA[y]||r.edges_firstVertexA[F]==r.edges_firstVertexB[y]?r.edges_faceB[F]==-1?(r.edges_faceB[F]=u,r.edges_prevB[F]=w,r.edges_nextB[F]=y):console.log("For face "+u+". Face B has already been set for edge: "+F+" With edge set: "+p):console.log("For face "+u+". Previous edge matches, but next edge doesn't share correct vertex!"):console.log("For face "+u+". Edges Don't share a vertex!")}for(var C=this.vertices_edgeOffsets.length-1;C>=0;C--)r.vertices_coords[3*C+0]=this.vertices_coords[3*C+0],r.vertices_coords[3*C+1]=this.vertices_coords[3*C+1],r.vertices_coords[3*C+2]=this.vertices_coords[3*C+2];for(var E=this.edges_faceA.length-1;E>=0;E--){var b=r.vertices(this.edges_firstVertexA[E]),m=b.index,W=r.vertices(this.edges_firstVertexB[E]),L=W.index,M=void 0;M=vectorAngle(b.coords(),W.coords());var P=[-1,-1,-1],D=[-1,-1,-1];P[0]=-1*r.vertices_coords[3*m+0],P[1]=-1*r.vertices_coords[3*m+1],P[2]=-1*r.vertices_coords[3*m+2],D[0]=r.vertices_coords[3*L+0]+P[0],D[1]=r.vertices_coords[3*L+1]+P[1],D[2]=r.vertices_coords[3*L+2]+P[2];var j=void 0;j=vectorAngle(P,D);var q=[-1,-1,-1];q[0]=D[0]/vectorLength(D),q[1]=D[1]/vectorLength(D),q[2]=D[2]/vectorLength(D);for(var G=vectorLength(b.coords()),T=void 0,c=0;c<s;c++)T=Math.sin(M*((c+1)/(s+1)))*G/Math.sin(Math.PI-j-M*((c+1)/(s+1))),r.vertices_coords[3*(g+E*s+c)+0]=r.vertices_coords[3*m+0]+q[0]*T,r.vertices_coords[3*(g+E*s+c)+1]=r.vertices_coords[3*m+1]+q[1]*T,r.vertices_coords[3*(g+E*s+c)+2]=r.vertices_coords[3*m+2]+q[2]*T}for(var z=0;z<this.faces_edgeOffsets.length;z++){var N=g+n*s+s*(s-1)/2*z;if(s>1)for(var H=0;H<s-1;H++){var J,b=r.vertices(this.vertexIndexAtClockwiseIndexOnOldFace(z,0,s-2-H,s)),m=b.index,W=r.vertices(this.vertexIndexAtClockwiseIndexOnOldFace(z,1,1+H,s)),L=W.index;J=vectorAngle(b.coords(),W.coords());var K=[-1,-1,-1],Q=[-1,-1,-1];K[0]=-1*r.vertices_coords[3*m+0],K[1]=-1*r.vertices_coords[3*m+1],K[2]=-1*r.vertices_coords[3*m+2],Q[0]=r.vertices_coords[3*L+0]+K[0],Q[1]=r.vertices_coords[3*L+1]+K[1],Q[2]=r.vertices_coords[3*L+2]+K[2];var R;R=vectorAngle(K,Q);var S=[-1,-1,-1];S[0]=Q[0]/vectorLength(Q),S[1]=Q[1]/vectorLength(Q),S[2]=Q[2]/vectorLength(Q);for(var U=vectorLength(b.coords()),X=0,c=0;c<H+1;c++)X=Math.sin(J*((c+1)/(H+2)))*U/Math.sin(Math.PI-R-J*((c+1)/(H+2))),N+H*(H+1)/2+c>=r.vertices_edgeOffsets.length&&console.log("breakpoint"),r.vertices_coords[3*(N+H*(H+1)/2+c)+0]=r.vertices_coords[3*m+0]+S[0]*X,r.vertices_coords[3*(N+H*(H+1)/2+c)+1]=r.vertices_coords[3*m+1]+S[1]*X,r.vertices_coords[3*(N+H*(H+1)/2+c)+2]=r.vertices_coords[3*m+2]+S[2]*X}}for(var Y=r.edges_faceA.length-1;Y>=0;Y--){var Z=-1,$=r.edges_firstVertexA[Y];if(r.vertices_edges[r.vertices_edgeOffsets[0]]==-1){r.edges_firstVertexA[Y]==$?Z=r.edges_prevA[Y]:r.edges_firstVertexB[Y]==$&&(Z=r.edges_prevB[Y]),r.vertices_edges[r.vertices_edgeOffsets[$]+0]=Y;for(var d=1;Y!=Z;)r.vertices_edges[r.vertices_edgeOffsets[$]+d]=Z,r.edges_firstVertexA[Z]==$?Z=r.edges_prevA[Z]:r.edges_firstVertexB[Z]==$&&(Z=r.edges_prevB[Z]),d+=1}if($=r.edges_firstVertexB[Y],r.vertices_edges[r.vertices_edgeOffsets[0]]==-1){r.edges_firstVertexA[Y]==$?Z=r.edges_prevA[Y]:r.edges_firstVertexB[Y]==$&&(Z=r.edges_prevB[Y]),r.vertices_edges[r.vertices_edgeOffsets[$]+0]=Y;for(var d=1;Y!=Z;)r.vertices_edges[r.vertices_edgeOffsets[$]+d]=Z,r.edges_firstVertexA[Z]==$?Z=r.edges_prevA[Z]:r.edges_firstVertexB[Z]==$&&(Z=r.edges_prevB[Z]),d+=1}}return[r,null]},e}();
